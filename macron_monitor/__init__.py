import dataclasses
import logging

from unidecode import unidecode

module_logger = logging.getLogger(__name__)

WORDS = [
    "Ahikōuka",
    "Colac Bay/Ōraka",
    "East Tākaka",
    "East Tāmaki Heights",
    "East Tāmaki",
    "Eketāhuna",
    "Hāmama",
    "Hāpu",
    "Hāwea Flat",
    "Hāwera",
    "Hūkerenui",
    "Kahikatea Pā",
    "Kaikōrero",
    "Kaikōura",
    "Kaūmatua",
    "Kumeū",
    "Kōpuaranga",
    "Kōrero",
    "Kūaotunu West",
    "Kūaotunu",
    "Lake Hāwea",
    "Lake Ōmāpere",
    "Lower Kawhātau",
    "Manawatū",
    "Mangarākau",
    "Mangatāwhai",
    "Mangatāwhiri",
    "Mangōnui",
    "Matatā",
    "Motumānawa / Pollen Island",
    "Māhia Beach",
    "Māhia",
    "Māhina Bay",
    "Mākara Beach",
    "Mākara",
    "Mākareao",
    "Māngere Bridge",
    "Māngere East",
    "Māngere",
    "Māori",
    "Māpua",
    "Mārahau",
    "Māriri",
    "Mātaikōtare",
    "Mōkau",
    "Mōrere",
    "Mōtū",
    "Ngongotahā Valley",
    "Ngongotahā",
    "Ngāhape",
    "Ngāhinapōuri",
    "Ngāi",
    "Ngāruawāhia",
    "Ngātīmoti",
    "Nūhaka",
    "Otūmoetai",
    "Owhiro",
    "Paekākāriki Hill",
    "Paekākāriki",
    "Pangatōtara",
    "Papakōwhai",
    "Port Pūponga",
    "Port Whangārei",
    "Port Ōhope",
    "Puramāhoi",
    "Putāruru",
    "Pāhaoa",
    "Pākawau",
    "Pākehā",
    "Pākuratahi",
    "Pārae Karetu",
    "Pāremoremo",
    "Pāuatahanui",
    "Pōhara",
    "Pōkeno",
    "Pōrangahau",
    "Pūerua",
    "Pūkio",
    "Pūkorokoro / Miranda Hot Springs",
    "Pūkorokoro / Miranda",
    "Pūponga",
    "Pūrākaunui",
    "Rangitūmau",
    "Ruakākā",
    "Ruakōkoputuna",
    "Rākau",
    "Rāngaiika",
    "Rānui",
    "Rātana",
    "Rūnanga Pā",
    "Taitā",
    "Takapūwāhia",
    "Taupō Bay",
    "Taupō",
    "Te Atatū Peninsula",
    "Te Atatū South",
    "Te Hāpua",
    "Te Kōpuru",
    "Te Mārua",
    "Te Pōhue",
    "Te Rāpaki-o-Te Rakiwhakaputa",
    "Te Ākau South",
    "Te Ākau",
    "Tongapōrutu",
    "Tungāne",
    "Tāhunanui",
    "Tākaka",
    "Tākou Bay",
    "Tāmaki",
    "Tāne",
    "Tāneatua",
    "Tāngarākau",
    "Tātou",
    "Tāwharanui",
    "Tīnui",
    "Tīrau",
    "Tīraumea",
    "Tītahi Bay",
    "Tōrere",
    "Tōtara Park",
    "Tōtara Vale",
    "Tōtaranui",
    "Tūrangi",
    "Tūranga",
    "Tūī Glen",
    "Tūī",
    "Kākā",
    "Kākāpō",
    "Kererū",
    "Kōtuku",
    "Tākapu",
    "Umukurī",
    "Upper Kawhātau",
    "Upper Tākaka",
    "Upper Ātiamuri",
    "Waihāhā",
    "Waimā Valley",
    "Waimā",
    "Waimārama",
    "Waipātiki Beach",
    "Wairau Pā",
    "Wairoa Pā",
    "Waitākere",
    "Waitākere",
    "Waitārere",
    "Waitōtara",
    "Whaikōrero",
    "Whakamārama",
    "Whakatāne",
    "Whakatīwai",
    "Whangamatā",
    "Whangamōmona",
    "Whangaparāoa",
    "Whangaparāoa",
    "Whangapē",
    "Whangākea / Pandora",
    "Whangārei Heads",
    "Whangārei",
    "Wharekōpae",
    "Wharepūhunga",
    "Whānau",
    "Whāngaimoana",
    "Wānaka",
    "Ākitio",
    "Ākura",
    "Āpiti",
    "Ātiamuri",
    "Āwhitu Central",
    "Āwhitu",
    "Ōakura",
    "Ōakura",
    "Ōhaeawai",
    "Ōhau",
    "Ōhaupō",
    "Ōhingaiti",
    "Ōhiwa",
    "Ōhope",
    "Ōhura",
    "Ōkaihau",
    "Ōkato",
    "Ōkiwi Bay",
    "Ōkura",
    "Ōkārito",
    "Ōmiha",
    "Ōmokoroa Beach",
    "Ōmokoroa",
    "Ōmāpere",
    "Ōnoke",
    "Ōpaheke",
    "Ōpaki",
    "Ōpou",
    "Ōpunake",
    "Ōpārara",
    "Ōpārau",
    "Ōpōtiki",
    "Ōrere Point",
    "Ōrere",
    "Ōtaki",
    "Ōtara",
    "Ōtara",
    "Ōtaua",
    "Ōtāhuhu",
    "Ōtautahi",
    "Ōtāne",
    "Ōwhango",
    "Ōwhata",
    "Ōwhata",
    "Ōwhiro Bay",
    "Ōwhiro",
]

SUSPICIOUS_WORDS = set(map(lambda word: unidecode(word.lower()), WORDS))

MACRONS = ['ā', 'ē', 'ī', 'ō', 'ū']


@dataclasses.dataclass()
class SuspiciousRev:
    alert_page: str
    title: str
    user: str
    revision: dict
    reason: str

    def to_string(self):
        return f"* ~~~~~ ({{{{diff2|{self.revision['new']}|diff}}}}) — [[{self.title}]] — [[User:{self.user}|{self.user}]] ([[User_talk:{self.user}|talk]] | [[Special:Contributions/{self.user}|contribs]]) — reason: ''{self.reason}''"


def count_macrons(*string: str) -> int:
    strings = str.join('', string).lower()
    return sum([strings.count(c) for c in MACRONS])
